{"version":3,"file":"app~37f2faf7.bundle.js","mappings":";2IASA,QATe,CACbA,SAAU,uCACVC,eAAgB,oDAChBC,iBAAkB,QAClBC,cAAe,iCACfC,iBAAkB,EAClBC,kBAAmB,uTCLrB,knGAAAC,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,kkBAEA,IAAQH,EAAuDI,EAAAA,EAAAA,cAAxCH,EAAwCG,EAAAA,EAAAA,iBAAtBF,EAAsBE,EAAAA,EAAAA,kBAEzDC,GAAYC,EAAAA,EAAAA,IAAON,EAAeC,EAAkB,CACxDM,QAAO,SAACC,GACNA,EAASC,kBAAkBP,EAAmB,CAAEQ,QAAS,MAC3D,IA2BF,QAxB8B,CACtBC,cAAa,SAACC,GAAI,oGACjBA,EAAI,CAAF,gEAIOP,EAAS,uCAAEQ,IAAIX,EAAmBU,IAAE,0CAL5B,EAMxB,EACME,kBAAiB,WAAG,iHACVT,EAAS,uCAAEU,OAAOb,IAAiB,0CADzB,EAE1B,EACMc,cAAa,SAACC,GAAY,oGAEzBA,EAAWC,eAAe,MAAO,CAAF,gEAItBb,EAAS,uCAAEc,IAAIjB,EAAmBe,IAAU,0CAN5B,EAOhC,EACMG,iBAAgB,SAACR,GAAI,iHACXP,EAAS,8CAASH,EAAmBU,IAAE,0CAD5B,EAE3B,gDCzBF,QALqB,CACnBS,gBAAiB,GAAF,OAAKjB,EAAAA,EAAAA,SAAe,QACnCkB,OAAQ,SAACV,GAAE,gBAAQR,EAAAA,EAAAA,SAAe,kBAAUQ,EAAE,sPCHhD,45NAoCA,QAnC2B,yBAD3B,4FAC2B,SAD3B,QAwBG,EANA,EANA,EANA,EALwB,EAgCxB,OAjCH,EAC2B,OAD3B,EAC2B,yCACzB,sGACyBW,MAAMC,EAAAA,iBAA6B,OAA5C,OAARC,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,EAAaC,aAAW,2CAChC,0FAED,WAA8BhB,GAAE,yFACPW,MAAMC,EAAAA,OAAoBZ,IAAI,OAAvC,OAARa,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,EAAaV,YAAU,2CAC/B,sFAED,WAAyBL,GAAE,yFACFiB,KAAKC,iBAAiBlB,GAAG,OACW,OADrDa,EAAW,EAAH,KACRM,EAAQN,EAASO,MAAMD,MAAME,KAAI,SAACC,GAAI,OAAKA,EAAKC,IAAI,IAAC,kBACpDJ,GAAK,gDACb,uFAED,WAA0BnB,GAAE,yFACHiB,KAAKC,iBAAiBlB,GAAG,OACe,OADzDa,EAAW,EAAH,KACRW,EAASX,EAASO,MAAMI,OAAOH,KAAI,SAACI,GAAK,OAAKA,EAAMF,IAAI,IAAC,kBACxDC,GAAM,gDACd,kFAED,WAAqBxB,GAAE,yFACEiB,KAAKC,iBAAiBlB,GAAG,OAI7C,OAJGa,EAAW,EAAH,KACVa,EAAY,GAChBb,EAASc,gBAAgBC,SAAQ,SAACC,GAChCH,GAAa,+CAAJ,OAAmDG,EAAOC,KAAI,yBAAiBD,EAAON,KAAI,4BAAoBM,EAAOA,OAAM,aACtI,IAAG,kBACIH,GAAS,gDACjB,+CAjCH,6DAiCG,EAhCwB","sources":["webpack://movie-catalogue-lite/./src/globals/config.js","webpack://movie-catalogue-lite/./src/scripts/data/favorite-restaurant-idb.js","webpack://movie-catalogue-lite/./src/globals/api-endpoint.js","webpack://movie-catalogue-lite/./src/scripts/data/therestaurantdb-source.js"],"sourcesContent":["const CONFIG = {\r\n  BASE_URL: 'https://restaurant-api.dicoding.dev/',\r\n  BASE_IMAGE_URL: 'https://restaurant-api.dicoding.dev/images/large/',\r\n  DEFAULT_LANGUAGE: 'en-us',\r\n  DATABASE_NAME: 'restaurants-catalogue-database',\r\n  DATABASE_VERSION: 1,\r\n  OBJECT_STORE_NAME: 'restaurant',\r\n};\r\n\r\nexport default CONFIG;\r\n","import { openDB } from 'idb';\r\nimport CONFIG from '../../globals/config';\r\n\r\nconst { DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME } = CONFIG;\r\n\r\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\r\n  upgrade(database) {\r\n    database.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\r\n  },\r\n});\r\n\r\nconst FavoriteRestaurantIdb = {\r\n  async getRestaurant(id) {\r\n    if (!id) {\r\n      return;\r\n    }\r\n    // eslint-disable-next-line consistent-return\r\n    return (await dbPromise).get(OBJECT_STORE_NAME, id);\r\n  },\r\n  async getAllRestaurants() {\r\n    return (await dbPromise).getAll(OBJECT_STORE_NAME);\r\n  },\r\n  async putRestaurant(restaurant) {\r\n    // eslint-disable-next-line no-prototype-builtins\r\n    if (!restaurant.hasOwnProperty('id')) {\r\n      return;\r\n    }\r\n    // eslint-disable-next-line consistent-return\r\n    return (await dbPromise).put(OBJECT_STORE_NAME, restaurant);\r\n  },\r\n  async deleteRestaurant(id) {\r\n    return (await dbPromise).delete(OBJECT_STORE_NAME, id);\r\n  },\r\n};\r\n\r\nexport default FavoriteRestaurantIdb;\r\n","import CONFIG from './config';\r\n\r\nconst API_ENDPOINT = {\r\n  RESTAURANT_LIST: `${CONFIG.BASE_URL}list`,\r\n  DETAIL: (id) => `${CONFIG.BASE_URL}detail/${id}`,\r\n};\r\n\r\nexport default API_ENDPOINT;\r\n","import API_ENDPOINT from '../../globals/api-endpoint';\r\n\r\nclass TheRestaurantDbSource {\r\n  static async Restaurants() {\r\n    const response = await fetch(API_ENDPOINT.RESTAURANT_LIST);\r\n    const responseJson = await response.json();\r\n    return responseJson.restaurants;\r\n  }\r\n\r\n  static async detailRestaurant(id) {\r\n    const response = await fetch(API_ENDPOINT.DETAIL(id));\r\n    const responseJson = await response.json();\r\n    return responseJson.restaurant;\r\n  }\r\n\r\n  static async detailFoods(id) {\r\n    const response = await this.detailRestaurant(id);\r\n    const foods = response.menus.foods.map((food) => food.name);\r\n    return foods;\r\n  }\r\n\r\n  static async detailDrinks(id) {\r\n    const response = await this.detailRestaurant(id);\r\n    const drinks = response.menus.drinks.map((drink) => drink.name);\r\n    return drinks;\r\n  }\r\n\r\n  static async reviews(id) {\r\n    const response = await this.detailRestaurant(id);\r\n    let container = '';\r\n    response.customerReviews.forEach((review) => {\r\n      container += `<div class= \"review\"><p id=\"date\">Tanggal : ${review.date}</p><p>User : ${review.name}</p><p>Comment : ${review.review}</p></div>`;\r\n    });\r\n    return container;\r\n  }\r\n}\r\n\r\nexport default TheRestaurantDbSource;\r\n"],"names":["BASE_URL","BASE_IMAGE_URL","DEFAULT_LANGUAGE","DATABASE_NAME","DATABASE_VERSION","OBJECT_STORE_NAME","i","CONFIG","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getRestaurant","id","get","getAllRestaurants","getAll","putRestaurant","restaurant","hasOwnProperty","put","deleteRestaurant","RESTAURANT_LIST","DETAIL","fetch","API_ENDPOINT","response","json","responseJson","restaurants","this","detailRestaurant","foods","menus","map","food","name","drinks","drink","container","customerReviews","forEach","review","date"],"sourceRoot":""}